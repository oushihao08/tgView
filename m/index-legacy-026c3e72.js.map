{"version":3,"file":"index-legacy-026c3e72.js","sources":["../../node_modules/.pnpm/element-plus@2.2.28_vue@3.2.38/node_modules/element-plus/es/hooks/use-attrs/index.mjs"],"sourcesContent":["import { computed, getCurrentInstance } from 'vue';\nimport { fromPairs } from 'lodash-unified';\nimport '../../utils/index.mjs';\nimport { debugWarn } from '../../utils/error.mjs';\n\nconst DEFAULT_EXCLUDE_KEYS = [\"class\", \"style\"];\nconst LISTENER_PREFIX = /^on[A-Z]/;\nconst useAttrs = (params = {}) => {\n  const { excludeListeners = false, excludeKeys } = params;\n  const allExcludeKeys = computed(() => {\n    return ((excludeKeys == null ? void 0 : excludeKeys.value) || []).concat(DEFAULT_EXCLUDE_KEYS);\n  });\n  const instance = getCurrentInstance();\n  if (!instance) {\n    debugWarn(\"use-attrs\", \"getCurrentInstance() returned null. useAttrs() must be called at the top of a setup function\");\n    return computed(() => ({}));\n  }\n  return computed(() => {\n    var _a;\n    return fromPairs(Object.entries((_a = instance.proxy) == null ? void 0 : _a.$attrs).filter(([key]) => !allExcludeKeys.value.includes(key) && !(excludeListeners && LISTENER_PREFIX.test(key))));\n  });\n};\n\nexport { useAttrs };\n//# sourceMappingURL=index.mjs.map\n"],"names":["DEFAULT_EXCLUDE_KEYS","LISTENER_PREFIX","exports","params","excludeListeners","excludeKeys","allExcludeKeys","computed","value","concat","instance","getCurrentInstance","_a","fromPairs","Object","entries","proxy","$attrs","filter","key","includes","test"],"mappings":"oLAKA,MAA0BA,EAAG,CAAC,QAAS,SAClBC,EAAG,WACPC,EAAA,KAAA,CAACC,EAAS,CAAV,KACf,MAAMC,iBAAEA,GAAmB,EAArBC,YAA4BA,GAAgBF,EAC9BG,EAAGC,GAAS,MACN,MAAfF,OAAsB,EAASA,EAAYG,QAAU,IAAIC,OAAOT,KAErEU,EAAWC,IACjB,OAIeJ,EAJVG,EAIW,KACd,IAAAE,EACA,OAAOC,EAAUC,OAAOC,QAAiC,OAAxBH,EAAKF,EAASM,YAAiB,EAASJ,EAAGK,QAAQC,QAAO,EAAEC,OAAUb,EAAeE,MAAMY,SAASD,IAAUf,GAAoBH,EAAgBoB,KAAKF,MAAxL,EAJgB,KAAO,CAAP,GAElB"}